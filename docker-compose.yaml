version: "3"

services:
  idref-api-derivationBnf:
    image: abesesr/idref:microservices-derivation-bnf
    container_name: idref-api-derivationBnf
    restart: unless-stopped
    environment:
      - URL_BNF=${URL_BNF}
      - URL_SOLR_BNF=${URL_SOLR_BNF}
      - PATTERN_ARK=${PATTERN_ARK}
      - PATTERN_RECORDID_BNF=${PATTERN_RECORDID_BNF}
      - URL_SRU=${URL_SRU}
      - URL_CHE=${URL_CHE}
      - URL_ORACLE=${URL_ORACLE}
      - URL_XSLTBNF=${URL_XSLTBNF}
    ports:
      - ${DERIVATION_BNF_HTTP_PORT:-6085}:8080
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=idref-api-derivationBnf"
      # pour que les mises à jour de cette image soient auto-déployées
      # par watchtower cf docker-compose.watchtower.yml
      - "com.centurylinklabs.watchtower.scope=idref-api-watchtower-scope"

  idref-api-derivationViaf:
    image: abesesr/idref:microservices-derivation-viaf
    container_name: idref-api-derivationViaf
    restart: unless-stopped
    environment:
      - URL_VIAF=${URL_VIAF}
      - URL_SOLR_VIAF=${URL_SOLR_VIAF}
      - PATTERN_VIAF=${PATTERN_VIAF}
      - PATTERN_RECORDID_VIAF=${PATTERN_RECORDID_VIAF}
      - URL_SRU=${URL_SRU}
      - URL_CHE=${URL_CHE}
      - URL_ORACLE=${URL_ORACLE}
    ports:
      - ${DERIVATION_VIAF_HTTP_PORT:-6085}:8080
    labels:
      # pour envoyer les logs dans le puits de log de l'abes
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/processors.add_fields.target="
      - "co.elastic.logs/processors.add_fields.fields.abes_appli=idref-api-derivationViaf"
      # pour que les mises à jour de cette image soient auto-déployées
      # par watchtower cf docker-compose.watchtower.yml
      - "com.centurylinklabs.watchtower.scope=idref-api-watchtower-scope"

  #######################################
  # idref-api-watchtower
  # Conteneur chargé de mettre à jour automatiquement toutes les 10 secondes
  # les images docker des conteneurs idref-api-* (passés en paramètre)
  # cela permet de faire du déploiement continue en attendant les déploiement Ansible
  # ce conteneur devra donc être supprimé une fois que le déploiement Ansible sera en place
  # plus d'info : https://containrrr.dev/watchtower
  idref-api-watchtower:
    image: containrrr/watchtower:1.4.0
    container_name: idref-api-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 60
      WATCHTOWER_DEBUG: "false"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      WATCHTOWER_WARN_ON_HEAD_FAILURE: "never"
      WATCHTOWER_RUN_ONCE: ${IDREF_API_WATCHTOWER_RUN_ONCE}
      WATCHTOWER_NOTIFICATIONS: "slack"
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${IDREF_API_WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL}
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: ${IDREF_API_WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER}
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: "#notif-idref"
      WATCHTOWER_SCOPE: "idref-api-watchtower-scope"
    labels:
      - "com.centurylinklabs.watchtower.scope=idref-api-watchtower-scope"
